name: "Publish release"
on: [ workflow_dispatch ]

jobs:
  validation:
    name: Maven Wrapper Validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: s4u/maven-wrapper-validation-action@v1

  test:
    name: Test run
    needs: validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Cache Maven
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven
      - name: Maven Test
        run: mvn --batch-mode verify

  build:
    name: Publish release
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Cache Maven
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven
      - name: Prepare environment
        env:
          GPG_KEY_CONTENTS: ${{ secrets.GPG_KEY_CONTENTS }}
          SIGNING_SECRET_KEY_RING_FILE: ${{ secrets.GPG_SIGNING_SECRET_KEY_RING_FILE }}
        run: sudo bash -c "echo '$GPG_KEY_CONTENTS' | base64 -d > '$SIGNING_SECRET_KEY_RING_FILE'"
      - name: Publish release
        env:
          SIGNING_KEY_ID: ${{ secrets.GPG_SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.GPG_SIGNING_PASSWORD }}
          SIGNING_SECRET_KEY_RING_FILE: ${{ secrets.GPG_SIGNING_SECRET_KEY_RING_FILE }}
          OSS_USER_TOKEN_KEY: ${{ secrets.OSS_USER_TOKEN_KEY }}
          OSS_USER_TOKEN_PASS: ${{ secrets.OSS_USER_TOKEN_PASS }}
        run: mvn --batch-mode clean deploy -P release -Dgpg.keyname=${{ secrets.GPG_SIGNING_KEY_ID }} -Dgpg.passphrase=${{ secrets.GPG_SIGNING_PASSWORD }} -Dgpg.secretKeyring=${{ secrets.GPG_SIGNING_SECRET_KEY_RING_FILE }} -Dossrh.username=${{ secrets.OSS_USER_TOKEN_KEY }} -Dossrh.password=${{ secrets.OSS_USER_TOKEN_PASS }}