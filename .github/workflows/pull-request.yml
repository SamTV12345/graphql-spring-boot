name: "Pull request"
on:
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  validation:
    name: Maven Wrapper Validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: s4u/maven-wrapper-validation-action@v1

  test:
    name: Test run
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        java: [ 17 ]
    needs: [ validation ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
      - name: Cache Maven
        uses: actions/cache@v3
        env:
          java-version: ${{ matrix.java }}
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-${{ env.java-version }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-${{ env.java-version }}-maven-
      - name: Maven Test
        run: mvn --batch-mode verify
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always() && matrix.os != 'ubuntu-latest'
        with:
          files: '**/target/surefire-reports/*.xml'

  build:
    name: Sonar analysis
    needs: test
    runs-on: ubuntu-latest
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        if: env.SONAR_TOKEN != null
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        if: env.SONAR_TOKEN != null
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Cache SonarCloud packages
        if: env.SONAR_TOKEN != null
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        if: env.SONAR_TOKEN != null
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven
      - name: Build and analyze
        if: env.SONAR_TOKEN != null
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn --batch-mode verify sonar:sonar -Dsonar.login=${{ secrets.SONAR_TOKEN }}